// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Core Models

model User {
  id              String        @id @default(uuid())
  name            String
  email           String        @unique
  hashedPassword  String
  avatarUrl       String?
  role            UserRole
  hospitalId      String?
  providerId      String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  assessments     Assessment[]  @relation("UserAssessments")
  jobPostings     JobPosting[]  @relation("AdminJobPostings")
  applications    Application[] @relation("UserApplications")
  providerServices ProviderService[] @relation("UserProviderServices")
}

model Assessment {
  id             String      @id @default(uuid())
  hospitalUserId String
  hospitalUser   User        @relation("UserAssessments", fields: [hospitalUserId], references: [id])
  hospitalId     String
  status         String      @default("Submitted")
  submissionDate DateTime    @default(now())
  formData       Json
  adminReview    Json?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model JobPosting {
  id              String        @id @default(uuid())
  postedByAdminId String
  postedByAdmin   User          @relation("AdminJobPostings", fields: [postedByAdminId], references: [id])
  title           String
  company         String
  location        String
  description     String
  type            String
  companyLogoUrl  String?
  datePosted      DateTime      @default(now())
  isActive        Boolean       @default(true)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  applications    Application[]
}

model Application {
  id                 String   @id @default(uuid())
  jobId              String
  job                JobPosting @relation(fields: [jobId], references: [id])
  professionalUserId String
  professionalUser   User     @relation("UserApplications", fields: [professionalUserId], references: [id])
  cvFileUrl          String
  coverLetter        String?
  status             String   @default("Submitted")
  applicationDate    DateTime @default(now())
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model ProviderService {
  id             String   @id @default(uuid())
  providerUserId String
  providerUser   User     @relation("UserProviderServices", fields: [providerUserId], references: [id])
  providerId     String
  name           String
  description    String
  category       String
  pricingModel   String
  tags           String[]
  imageUrl       String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

// Enums

enum UserRole {
  hospital
  professional
  provider
  admin
}
